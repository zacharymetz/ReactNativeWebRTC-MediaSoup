{"v":"5.7.8","fr":60,"ip":0,"op":91,"w":800,"h":800,"nm":"Starliner","ddd":0,"assets":[{"id":"comp_0","layers":[{"ddd":0,"ind":1,"ty":4,"nm":"Shape Layer 2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":180,"ix":10},"p":{"a":0,"k":[960,515,0],"ix":2,"l":2},"a":{"a":0,"k":[750,520,0],"ix":1,"l":2,"x":"var $bm_rt;\nvar chk, totalW, x, x, x, y;\nchk = effect('Snake Path')('Anchor Point X Alignment').value;\ntotalW = effect('Snake Path')('Total Width');\nswitch (chk) {\ncase 1:\n    x = 0;\n    break;\ncase 2:\n    x = $bm_div(totalW, 2);\n    break;\ncase 3:\n    x = totalW;\n    break;\n}\ny = transform.anchorPoint[1];\n$bm_rt = [\n    x,\n    y\n];"},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"Snake Path","np":33,"mn":"Pseudo/0.899459938948056","ix":1,"en":1,"ef":[{"ty":6,"nm":"Line Setup","mn":"Pseudo/0.899459938948056-0001","ix":1,"v":0},{"ty":0,"nm":"Total Width","mn":"Pseudo/0.899459938948056-0002","ix":2,"v":{"a":0,"k":600,"ix":2}},{"ty":0,"nm":"Number of Points","mn":"Pseudo/0.899459938948056-0003","ix":3,"v":{"a":0,"k":20,"ix":3}},{"ty":7,"nm":"Direction","mn":"Pseudo/0.899459938948056-0004","ix":4,"v":{"a":0,"k":2,"ix":4}},{"ty":7,"nm":"Anchor Point X Alignment","mn":"Pseudo/0.899459938948056-0005","ix":5,"v":{"a":0,"k":2,"ix":5}},{"ty":0,"nm":"Baseline Height","mn":"Pseudo/0.899459938948056-0006","ix":6,"v":{"a":0,"k":0,"ix":6}},{"ty":6,"nm":"Snake Path","mn":"Pseudo/0.899459938948056-0007","ix":7,"v":0},{"ty":6,"nm":"Animation","mn":"Pseudo/0.899459938948056-0008","ix":8,"v":0},{"ty":0,"nm":"First Point Y Value","mn":"Pseudo/0.899459938948056-0009","ix":9,"v":{"a":1,"k":[{"i":{"x":[0.61],"y":[1]},"o":{"x":[0.72],"y":[0]},"t":0,"s":[520]},{"i":{"x":[0.714],"y":[0.645]},"o":{"x":[0.39],"y":[0]},"t":35.715,"s":[440]},{"i":{"x":[0.5],"y":[1]},"o":{"x":[0.092],"y":[0.592]},"t":45,"s":[490]},{"t":74,"s":[520]}],"ix":9}},{"ty":0,"nm":"Frame Delay","mn":"Pseudo/0.899459938948056-0010","ix":10,"v":{"a":0,"k":2,"ix":10}},{"ty":6,"nm":"Trim Paths","mn":"Pseudo/0.899459938948056-0011","ix":11,"v":0},{"ty":0,"nm":"Trim Start","mn":"Pseudo/0.899459938948056-0012","ix":12,"v":{"a":0,"k":0,"ix":12}},{"ty":0,"nm":"Trim End","mn":"Pseudo/0.899459938948056-0013","ix":13,"v":{"a":0,"k":100,"ix":13}},{"ty":0,"nm":"Offset","mn":"Pseudo/0.899459938948056-0014","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":6,"nm":"Snake Path","mn":"Pseudo/0.899459938948056-0015","ix":15,"v":0},{"ty":6,"nm":"Snake Path","mn":"Pseudo/0.899459938948056-0016","ix":16,"v":0},{"ty":6,"nm":"Styling","mn":"Pseudo/0.899459938948056-0017","ix":17,"v":0},{"ty":6,"nm":"Stroke","mn":"Pseudo/0.899459938948056-0018","ix":18,"v":0},{"ty":0,"nm":"Stroke Width","mn":"Pseudo/0.899459938948056-0019","ix":19,"v":{"a":0,"k":10,"ix":19}},{"ty":2,"nm":"Stroke Color","mn":"Pseudo/0.899459938948056-0020","ix":20,"v":{"a":0,"k":[0.387282848358,0.245813131332,0.847058832645,1],"ix":20}},{"ty":0,"nm":"Stroke Opacity","mn":"Pseudo/0.899459938948056-0021","ix":21,"v":{"a":0,"k":100,"ix":21}},{"ty":6,"nm":"Snake Path","mn":"Pseudo/0.899459938948056-0022","ix":22,"v":0},{"ty":6,"nm":"Fill","mn":"Pseudo/0.899459938948056-0023","ix":23,"v":0},{"ty":2,"nm":"Fill Color","mn":"Pseudo/0.899459938948056-0024","ix":24,"v":{"a":0,"k":[0,0.61568627451,1,1],"ix":24}},{"ty":0,"nm":"Fill Opacity","mn":"Pseudo/0.899459938948056-0025","ix":25,"v":{"a":0,"k":100,"ix":25}},{"ty":6,"nm":"Snake Path","mn":"Pseudo/0.899459938948056-0026","ix":26,"v":0},{"ty":0,"nm":"Roundness","mn":"Pseudo/0.899459938948056-0027","ix":27,"v":{"a":0,"k":176,"ix":27}},{"ty":0,"nm":"Stair-Step Look","mn":"Pseudo/0.899459938948056-0028","ix":28,"v":{"a":0,"k":0,"ix":28}},{"ty":6,"nm":"Snake Path","mn":"Pseudo/0.899459938948056-0029","ix":29,"v":0},{"ty":6,"nm":"Â© 2021 Pepper Jack Studio LLC","mn":"Pseudo/0.899459938948056-0030","ix":30,"v":0},{"ty":6,"nm":"Snake Path","mn":"Pseudo/0.899459938948056-0031","ix":31,"v":0}]}],"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar totalW, numPts, gaps, d, y, tanD, pts, inTan, outTan, startPt, i, ptX, ptY, i, ptX, ptY, ptY, i, ptX, ptY;\ntotalW = effect('Snake Path')('Total Width');\nnumPts = effect('Snake Path')('Number of Points');\ngaps = $bm_div(totalW, numPts);\nd = $bm_mul(thisComp.frameDuration, effect('Snake Path')('Frame Delay'));\ny = effect('Snake Path')('First Point Y Value');\ntanD = $bm_div($bm_mul(gaps, effect('Snake Path')('Stair-Step Look')), 100);\npts = new Array();\ninTan = new Array();\noutTan = new Array();\nstartPt = effect('Snake Path')('Direction');\nif (startPt == 1) {\n    for (i = 0; i <= numPts; i++) {\n        ptX = $bm_mul(i, gaps);\n        ptY = y.valueAtTime($bm_sub(time, $bm_mul(d, i)));\n        pts.push([\n            ptX,\n            ptY\n        ]);\n        inTan.push([\n            $bm_neg(tanD),\n            0\n        ]);\n        outTan.push([\n            tanD,\n            0\n        ]);\n    }\n} else if (startPt == 2) {\n    for (i = 0; i <= numPts; i++) {\n        ptX = $bm_mul(i, gaps);\n        if (i < $bm_div(numPts, 2)) {\n            ptY = y.valueAtTime($bm_sub(time, $bm_mul(d, $bm_sub($bm_div(numPts, 2), i))));\n        } else {\n            ptY = y.valueAtTime($bm_sub(time, $bm_mul(d, $bm_sub(i, $bm_div(numPts, 2)))));\n        }\n        pts.push([\n            ptX,\n            ptY\n        ]);\n        inTan.push([\n            $bm_neg(tanD),\n            0\n        ]);\n        outTan.push([\n            tanD,\n            0\n        ]);\n    }\n} else {\n    for (i = 0; i <= numPts; i++) {\n        ptX = $bm_mul($bm_sub(numPts, i), gaps);\n        ptY = y.valueAtTime($bm_sub(time, $bm_mul(d, i)));\n        pts.push([\n            ptX,\n            ptY\n        ]);\n        inTan.push([\n            $bm_neg(tanD),\n            0\n        ]);\n        outTan.push([\n            tanD,\n            0\n        ]);\n    }\n}\n$bm_rt = createPath(pts, inTan, outTan, false);"},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3,"x":"var $bm_rt;\n$bm_rt = effect('Snake Path')('Stroke Color');"},"o":{"a":0,"k":100,"ix":4,"x":"var $bm_rt;\n$bm_rt = effect('Snake Path')('Stroke Opacity');"},"w":{"a":0,"k":2,"ix":5,"x":"var $bm_rt;\n$bm_rt = effect('Snake Path')('Stroke Width');"},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"rd","nm":"Round Corners 1","r":{"a":0,"k":460,"ix":1,"x":"var $bm_rt;\nvar r, maxR;\nr = $bm_div(effect('Snake Path')('Roundness'), 100);\nmaxR = $bm_div(effect('Snake Path')('Number of Points'), 2);\n$bm_rt = $bm_mul(r, maxR);"},"ix":3,"mn":"ADBE Vector Filter - RC","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Path Stroke","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar totalW, numPts, gaps, d, y, tanD, pts, inTan, outTan, startPt, ptX, ptY, ptX, ptY, i, ptX, ptY, ptX, ptY, ptX, ptY, ptX, ptY, ptX, ptY, i, ptX, ptY, ptY, ptX, ptY, ptX, ptY, ptX, ptY, ptX, ptY, i, ptX, ptY, ptX, ptY, ptX, ptY;\ntotalW = effect('Snake Path')('Total Width');\nnumPts = effect('Snake Path')('Number of Points');\ngaps = $bm_div(totalW, numPts);\nd = $bm_mul(thisComp.frameDuration, effect('Snake Path')('Frame Delay'));\ny = effect('Snake Path')('First Point Y Value');\ntanD = $bm_div($bm_mul(gaps, effect('Snake Path')('Stair-Step Look')), 100);\npts = new Array();\ninTan = new Array();\noutTan = new Array();\nstartPt = effect('Snake Path')('Direction');\nif (startPt == 1) {\n    ptX = 0;\n    ptY = effect('Snake Path')('Baseline Height');\n    pts.push([\n        ptX,\n        ptY\n    ]);\n    inTan.push([\n        0,\n        0\n    ]);\n    outTan.push([\n        0,\n        0\n    ]);\n    ptX = 0;\n    ptY = y.valueAtTime(time);\n    pts.push([\n        ptX,\n        ptY\n    ]);\n    inTan.push([\n        0,\n        0\n    ]);\n    outTan.push([\n        tanD,\n        0\n    ]);\n    for (i = 1; i < numPts; i++) {\n        ptX = $bm_mul(i, gaps);\n        ptY = y.valueAtTime($bm_sub(time, $bm_mul(d, i)));\n        pts.push([\n            ptX,\n            ptY\n        ]);\n        inTan.push([\n            $bm_neg(tanD),\n            0\n        ]);\n        outTan.push([\n            tanD,\n            0\n        ]);\n    }\n    ptX = $bm_mul(numPts, gaps);\n    ptY = y.valueAtTime($bm_sub(time, $bm_mul(d, numPts)));\n    pts.push([\n        ptX,\n        ptY\n    ]);\n    inTan.push([\n        $bm_neg(tanD),\n        0\n    ]);\n    outTan.push([\n        0,\n        0\n    ]);\n    ptX = $bm_mul(numPts, gaps);\n    ptY = effect('Snake Path')('Baseline Height');\n    pts.push([\n        ptX,\n        ptY\n    ]);\n    inTan.push([\n        0,\n        0\n    ]);\n    outTan.push([\n        0,\n        0\n    ]);\n} else if (startPt == 2) {\n    ptX = 0;\n    ptY = effect('Snake Path')('Baseline Height');\n    pts.push([\n        ptX,\n        ptY\n    ]);\n    inTan.push([\n        0,\n        0\n    ]);\n    outTan.push([\n        0,\n        0\n    ]);\n    ptX = 0;\n    ptY = y.valueAtTime($bm_sub(time, $bm_div($bm_mul(d, numPts), 2)));\n    pts.push([\n        ptX,\n        ptY\n    ]);\n    inTan.push([\n        0,\n        0\n    ]);\n    outTan.push([\n        tanD,\n        0\n    ]);\n    for (i = 1; i < numPts; i++) {\n        ptX = $bm_mul(i, gaps);\n        if (i < $bm_div(numPts, 2)) {\n            ptY = y.valueAtTime($bm_sub(time, $bm_mul(d, $bm_sub($bm_div(numPts, 2), i))));\n        } else {\n            ptY = y.valueAtTime($bm_sub(time, $bm_mul(d, $bm_sub(i, $bm_div(numPts, 2)))));\n        }\n        pts.push([\n            ptX,\n            ptY\n        ]);\n        inTan.push([\n            $bm_neg(tanD),\n            0\n        ]);\n        outTan.push([\n            tanD,\n            0\n        ]);\n    }\n    ptX = $bm_mul(numPts, gaps);\n    ptY = y.valueAtTime($bm_sub(time, $bm_div($bm_mul(d, numPts), 2)));\n    pts.push([\n        ptX,\n        ptY\n    ]);\n    inTan.push([\n        $bm_neg(tanD),\n        0\n    ]);\n    outTan.push([\n        0,\n        0\n    ]);\n    ptX = $bm_mul(numPts, gaps);\n    ptY = effect('Snake Path')('Baseline Height');\n    pts.push([\n        ptX,\n        ptY\n    ]);\n    inTan.push([\n        0,\n        0\n    ]);\n    outTan.push([\n        0,\n        0\n    ]);\n} else {\n    ptX = $bm_mul(numPts, gaps);\n    ptY = effect('Snake Path')('Baseline Height');\n    pts.push([\n        ptX,\n        ptY\n    ]);\n    inTan.push([\n        0,\n        0\n    ]);\n    outTan.push([\n        0,\n        0\n    ]);\n    ptX = $bm_mul(numPts, gaps);\n    ptY = y.valueAtTime(time);\n    pts.push([\n        ptX,\n        ptY\n    ]);\n    inTan.push([\n        $bm_neg(tanD),\n        0\n    ]);\n    outTan.push([\n        0,\n        0\n    ]);\n    for (i = 1; i < numPts; i++) {\n        ptX = $bm_mul($bm_sub(numPts, i), gaps);\n        ptY = y.valueAtTime($bm_sub(time, $bm_mul(d, i)));\n        pts.push([\n            ptX,\n            ptY\n        ]);\n        inTan.push([\n            $bm_neg(tanD),\n            0\n        ]);\n        outTan.push([\n            tanD,\n            0\n        ]);\n    }\n    ptX = 0;\n    ptY = y.valueAtTime($bm_sub(time, $bm_mul(d, numPts)));\n    pts.push([\n        ptX,\n        ptY\n    ]);\n    inTan.push([\n        0,\n        0\n    ]);\n    outTan.push([\n        tanD,\n        0\n    ]);\n    ptX = 0;\n    ptY = effect('Snake Path')('Baseline Height');\n    pts.push([\n        ptX,\n        ptY\n    ]);\n    inTan.push([\n        0,\n        0\n    ]);\n    outTan.push([\n        0,\n        0\n    ]);\n}\n$bm_rt = createPath(pts, inTan, outTan, false);"},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Path Fill","np":3,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1,"x":"var $bm_rt;\n$bm_rt = effect('Snake Path')('Trim Start');"},"e":{"a":0,"k":100,"ix":2,"x":"var $bm_rt;\n$bm_rt = effect('Snake Path')('Trim End');"},"o":{"a":0,"k":0,"ix":3,"x":"var $bm_rt;\n$bm_rt = effect('Snake Path')('Offset');"},"m":1,"ix":3,"nm":"Trim Paths","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":92,"st":-138,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"Shape Layer 1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[960,555,0],"ix":2,"l":2},"a":{"a":0,"k":[750,520,0],"ix":1,"l":2,"x":"var $bm_rt;\nvar chk, totalW, x, x, x, y;\nchk = effect('Snake Path')('Anchor Point X Alignment').value;\ntotalW = effect('Snake Path')('Total Width');\nswitch (chk) {\ncase 1:\n    x = 0;\n    break;\ncase 2:\n    x = $bm_div(totalW, 2);\n    break;\ncase 3:\n    x = totalW;\n    break;\n}\ny = transform.anchorPoint[1];\n$bm_rt = [\n    x,\n    y\n];"},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"Snake Path","np":33,"mn":"Pseudo/0.899459938948056","ix":1,"en":1,"ef":[{"ty":6,"nm":"Line Setup","mn":"Pseudo/0.899459938948056-0001","ix":1,"v":0},{"ty":0,"nm":"Total Width","mn":"Pseudo/0.899459938948056-0002","ix":2,"v":{"a":0,"k":600,"ix":2}},{"ty":0,"nm":"Number of Points","mn":"Pseudo/0.899459938948056-0003","ix":3,"v":{"a":0,"k":20,"ix":3}},{"ty":7,"nm":"Direction","mn":"Pseudo/0.899459938948056-0004","ix":4,"v":{"a":0,"k":2,"ix":4}},{"ty":7,"nm":"Anchor Point X Alignment","mn":"Pseudo/0.899459938948056-0005","ix":5,"v":{"a":0,"k":2,"ix":5}},{"ty":0,"nm":"Baseline Height","mn":"Pseudo/0.899459938948056-0006","ix":6,"v":{"a":0,"k":0,"ix":6}},{"ty":6,"nm":"Snake Path","mn":"Pseudo/0.899459938948056-0007","ix":7,"v":0},{"ty":6,"nm":"Animation","mn":"Pseudo/0.899459938948056-0008","ix":8,"v":0},{"ty":0,"nm":"First Point Y Value","mn":"Pseudo/0.899459938948056-0009","ix":9,"v":{"a":1,"k":[{"i":{"x":[0.61],"y":[1]},"o":{"x":[0.72],"y":[0]},"t":0,"s":[520]},{"i":{"x":[0.631],"y":[0.599]},"o":{"x":[0.39],"y":[0]},"t":35.715,"s":[440]},{"i":{"x":[0.5],"y":[1]},"o":{"x":[0.118],"y":[0.668]},"t":45,"s":[490]},{"t":74,"s":[520]}],"ix":9}},{"ty":0,"nm":"Frame Delay","mn":"Pseudo/0.899459938948056-0010","ix":10,"v":{"a":0,"k":2,"ix":10}},{"ty":6,"nm":"Trim Paths","mn":"Pseudo/0.899459938948056-0011","ix":11,"v":0},{"ty":0,"nm":"Trim Start","mn":"Pseudo/0.899459938948056-0012","ix":12,"v":{"a":0,"k":0,"ix":12}},{"ty":0,"nm":"Trim End","mn":"Pseudo/0.899459938948056-0013","ix":13,"v":{"a":0,"k":100,"ix":13}},{"ty":0,"nm":"Offset","mn":"Pseudo/0.899459938948056-0014","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":6,"nm":"Snake Path","mn":"Pseudo/0.899459938948056-0015","ix":15,"v":0},{"ty":6,"nm":"Snake Path","mn":"Pseudo/0.899459938948056-0016","ix":16,"v":0},{"ty":6,"nm":"Styling","mn":"Pseudo/0.899459938948056-0017","ix":17,"v":0},{"ty":6,"nm":"Stroke","mn":"Pseudo/0.899459938948056-0018","ix":18,"v":0},{"ty":0,"nm":"Stroke Width","mn":"Pseudo/0.899459938948056-0019","ix":19,"v":{"a":0,"k":10,"ix":19}},{"ty":2,"nm":"Stroke Color","mn":"Pseudo/0.899459938948056-0020","ix":20,"v":{"a":0,"k":[0.388235330582,0.247058838606,0.84705889225,1],"ix":20}},{"ty":0,"nm":"Stroke Opacity","mn":"Pseudo/0.899459938948056-0021","ix":21,"v":{"a":0,"k":60,"ix":21}},{"ty":6,"nm":"Snake Path","mn":"Pseudo/0.899459938948056-0022","ix":22,"v":0},{"ty":6,"nm":"Fill","mn":"Pseudo/0.899459938948056-0023","ix":23,"v":0},{"ty":2,"nm":"Fill Color","mn":"Pseudo/0.899459938948056-0024","ix":24,"v":{"a":0,"k":[0,0.61568627451,1,1],"ix":24}},{"ty":0,"nm":"Fill Opacity","mn":"Pseudo/0.899459938948056-0025","ix":25,"v":{"a":0,"k":100,"ix":25}},{"ty":6,"nm":"Snake Path","mn":"Pseudo/0.899459938948056-0026","ix":26,"v":0},{"ty":0,"nm":"Roundness","mn":"Pseudo/0.899459938948056-0027","ix":27,"v":{"a":0,"k":176,"ix":27}},{"ty":0,"nm":"Stair-Step Look","mn":"Pseudo/0.899459938948056-0028","ix":28,"v":{"a":0,"k":0,"ix":28}},{"ty":6,"nm":"Snake Path","mn":"Pseudo/0.899459938948056-0029","ix":29,"v":0},{"ty":6,"nm":"Â© 2021 Pepper Jack Studio LLC","mn":"Pseudo/0.899459938948056-0030","ix":30,"v":0},{"ty":6,"nm":"Snake Path","mn":"Pseudo/0.899459938948056-0031","ix":31,"v":0}]}],"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar totalW, numPts, gaps, d, y, tanD, pts, inTan, outTan, startPt, i, ptX, ptY, i, ptX, ptY, ptY, i, ptX, ptY;\ntotalW = effect('Snake Path')('Total Width');\nnumPts = effect('Snake Path')('Number of Points');\ngaps = $bm_div(totalW, numPts);\nd = $bm_mul(thisComp.frameDuration, effect('Snake Path')('Frame Delay'));\ny = effect('Snake Path')('First Point Y Value');\ntanD = $bm_div($bm_mul(gaps, effect('Snake Path')('Stair-Step Look')), 100);\npts = new Array();\ninTan = new Array();\noutTan = new Array();\nstartPt = effect('Snake Path')('Direction');\nif (startPt == 1) {\n    for (i = 0; i <= numPts; i++) {\n        ptX = $bm_mul(i, gaps);\n        ptY = y.valueAtTime($bm_sub(time, $bm_mul(d, i)));\n        pts.push([\n            ptX,\n            ptY\n        ]);\n        inTan.push([\n            $bm_neg(tanD),\n            0\n        ]);\n        outTan.push([\n            tanD,\n            0\n        ]);\n    }\n} else if (startPt == 2) {\n    for (i = 0; i <= numPts; i++) {\n        ptX = $bm_mul(i, gaps);\n        if (i < $bm_div(numPts, 2)) {\n            ptY = y.valueAtTime($bm_sub(time, $bm_mul(d, $bm_sub($bm_div(numPts, 2), i))));\n        } else {\n            ptY = y.valueAtTime($bm_sub(time, $bm_mul(d, $bm_sub(i, $bm_div(numPts, 2)))));\n        }\n        pts.push([\n            ptX,\n            ptY\n        ]);\n        inTan.push([\n            $bm_neg(tanD),\n            0\n        ]);\n        outTan.push([\n            tanD,\n            0\n        ]);\n    }\n} else {\n    for (i = 0; i <= numPts; i++) {\n        ptX = $bm_mul($bm_sub(numPts, i), gaps);\n        ptY = y.valueAtTime($bm_sub(time, $bm_mul(d, i)));\n        pts.push([\n            ptX,\n            ptY\n        ]);\n        inTan.push([\n            $bm_neg(tanD),\n            0\n        ]);\n        outTan.push([\n            tanD,\n            0\n        ]);\n    }\n}\n$bm_rt = createPath(pts, inTan, outTan, false);"},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3,"x":"var $bm_rt;\n$bm_rt = effect('Snake Path')('Stroke Color');"},"o":{"a":0,"k":100,"ix":4,"x":"var $bm_rt;\n$bm_rt = effect('Snake Path')('Stroke Opacity');"},"w":{"a":0,"k":2,"ix":5,"x":"var $bm_rt;\n$bm_rt = effect('Snake Path')('Stroke Width');"},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"rd","nm":"Round Corners 1","r":{"a":0,"k":460,"ix":1,"x":"var $bm_rt;\nvar r, maxR;\nr = $bm_div(effect('Snake Path')('Roundness'), 100);\nmaxR = $bm_div(effect('Snake Path')('Number of Points'), 2);\n$bm_rt = $bm_mul(r, maxR);"},"ix":3,"mn":"ADBE Vector Filter - RC","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Path Stroke","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[],"o":[],"v":[],"c":false},"ix":2,"x":"var $bm_rt;\nvar totalW, numPts, gaps, d, y, tanD, pts, inTan, outTan, startPt, ptX, ptY, ptX, ptY, i, ptX, ptY, ptX, ptY, ptX, ptY, ptX, ptY, ptX, ptY, i, ptX, ptY, ptY, ptX, ptY, ptX, ptY, ptX, ptY, ptX, ptY, i, ptX, ptY, ptX, ptY, ptX, ptY;\ntotalW = effect('Snake Path')('Total Width');\nnumPts = effect('Snake Path')('Number of Points');\ngaps = $bm_div(totalW, numPts);\nd = $bm_mul(thisComp.frameDuration, effect('Snake Path')('Frame Delay'));\ny = effect('Snake Path')('First Point Y Value');\ntanD = $bm_div($bm_mul(gaps, effect('Snake Path')('Stair-Step Look')), 100);\npts = new Array();\ninTan = new Array();\noutTan = new Array();\nstartPt = effect('Snake Path')('Direction');\nif (startPt == 1) {\n    ptX = 0;\n    ptY = effect('Snake Path')('Baseline Height');\n    pts.push([\n        ptX,\n        ptY\n    ]);\n    inTan.push([\n        0,\n        0\n    ]);\n    outTan.push([\n        0,\n        0\n    ]);\n    ptX = 0;\n    ptY = y.valueAtTime(time);\n    pts.push([\n        ptX,\n        ptY\n    ]);\n    inTan.push([\n        0,\n        0\n    ]);\n    outTan.push([\n        tanD,\n        0\n    ]);\n    for (i = 1; i < numPts; i++) {\n        ptX = $bm_mul(i, gaps);\n        ptY = y.valueAtTime($bm_sub(time, $bm_mul(d, i)));\n        pts.push([\n            ptX,\n            ptY\n        ]);\n        inTan.push([\n            $bm_neg(tanD),\n            0\n        ]);\n        outTan.push([\n            tanD,\n            0\n        ]);\n    }\n    ptX = $bm_mul(numPts, gaps);\n    ptY = y.valueAtTime($bm_sub(time, $bm_mul(d, numPts)));\n    pts.push([\n        ptX,\n        ptY\n    ]);\n    inTan.push([\n        $bm_neg(tanD),\n        0\n    ]);\n    outTan.push([\n        0,\n        0\n    ]);\n    ptX = $bm_mul(numPts, gaps);\n    ptY = effect('Snake Path')('Baseline Height');\n    pts.push([\n        ptX,\n        ptY\n    ]);\n    inTan.push([\n        0,\n        0\n    ]);\n    outTan.push([\n        0,\n        0\n    ]);\n} else if (startPt == 2) {\n    ptX = 0;\n    ptY = effect('Snake Path')('Baseline Height');\n    pts.push([\n        ptX,\n        ptY\n    ]);\n    inTan.push([\n        0,\n        0\n    ]);\n    outTan.push([\n        0,\n        0\n    ]);\n    ptX = 0;\n    ptY = y.valueAtTime($bm_sub(time, $bm_div($bm_mul(d, numPts), 2)));\n    pts.push([\n        ptX,\n        ptY\n    ]);\n    inTan.push([\n        0,\n        0\n    ]);\n    outTan.push([\n        tanD,\n        0\n    ]);\n    for (i = 1; i < numPts; i++) {\n        ptX = $bm_mul(i, gaps);\n        if (i < $bm_div(numPts, 2)) {\n            ptY = y.valueAtTime($bm_sub(time, $bm_mul(d, $bm_sub($bm_div(numPts, 2), i))));\n        } else {\n            ptY = y.valueAtTime($bm_sub(time, $bm_mul(d, $bm_sub(i, $bm_div(numPts, 2)))));\n        }\n        pts.push([\n            ptX,\n            ptY\n        ]);\n        inTan.push([\n            $bm_neg(tanD),\n            0\n        ]);\n        outTan.push([\n            tanD,\n            0\n        ]);\n    }\n    ptX = $bm_mul(numPts, gaps);\n    ptY = y.valueAtTime($bm_sub(time, $bm_div($bm_mul(d, numPts), 2)));\n    pts.push([\n        ptX,\n        ptY\n    ]);\n    inTan.push([\n        $bm_neg(tanD),\n        0\n    ]);\n    outTan.push([\n        0,\n        0\n    ]);\n    ptX = $bm_mul(numPts, gaps);\n    ptY = effect('Snake Path')('Baseline Height');\n    pts.push([\n        ptX,\n        ptY\n    ]);\n    inTan.push([\n        0,\n        0\n    ]);\n    outTan.push([\n        0,\n        0\n    ]);\n} else {\n    ptX = $bm_mul(numPts, gaps);\n    ptY = effect('Snake Path')('Baseline Height');\n    pts.push([\n        ptX,\n        ptY\n    ]);\n    inTan.push([\n        0,\n        0\n    ]);\n    outTan.push([\n        0,\n        0\n    ]);\n    ptX = $bm_mul(numPts, gaps);\n    ptY = y.valueAtTime(time);\n    pts.push([\n        ptX,\n        ptY\n    ]);\n    inTan.push([\n        $bm_neg(tanD),\n        0\n    ]);\n    outTan.push([\n        0,\n        0\n    ]);\n    for (i = 1; i < numPts; i++) {\n        ptX = $bm_mul($bm_sub(numPts, i), gaps);\n        ptY = y.valueAtTime($bm_sub(time, $bm_mul(d, i)));\n        pts.push([\n            ptX,\n            ptY\n        ]);\n        inTan.push([\n            $bm_neg(tanD),\n            0\n        ]);\n        outTan.push([\n            tanD,\n            0\n        ]);\n    }\n    ptX = 0;\n    ptY = y.valueAtTime($bm_sub(time, $bm_mul(d, numPts)));\n    pts.push([\n        ptX,\n        ptY\n    ]);\n    inTan.push([\n        0,\n        0\n    ]);\n    outTan.push([\n        tanD,\n        0\n    ]);\n    ptX = 0;\n    ptY = effect('Snake Path')('Baseline Height');\n    pts.push([\n        ptX,\n        ptY\n    ]);\n    inTan.push([\n        0,\n        0\n    ]);\n    outTan.push([\n        0,\n        0\n    ]);\n}\n$bm_rt = createPath(pts, inTan, outTan, false);"},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Path Fill","np":3,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1,"x":"var $bm_rt;\n$bm_rt = effect('Snake Path')('Trim Start');"},"e":{"a":0,"k":100,"ix":2,"x":"var $bm_rt;\n$bm_rt = effect('Snake Path')('Trim End');"},"o":{"a":0,"k":0,"ix":3,"x":"var $bm_rt;\n$bm_rt = effect('Snake Path')('Offset');"},"m":1,"ix":3,"nm":"Trim Paths","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":92,"st":-138,"bm":0}]}],"layers":[{"ddd":0,"ind":1,"ty":3,"nm":"NULL CONTROL ","sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[398,398,0],"ix":2,"l":2},"a":{"a":0,"k":[50,50,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":91,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":0,"nm":"Comp 7","parent":1,"refId":"comp_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":220,"ix":10},"p":{"a":0,"k":[48,48,0],"ix":2,"l":2},"a":{"a":0,"k":[960,540,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"w":1920,"h":1080,"ip":0,"op":91,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":0,"nm":"Comp 7","parent":1,"refId":"comp_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":-45,"ix":10},"p":{"a":0,"k":[52,52,0],"ix":2,"l":2},"a":{"a":0,"k":[960,540,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"w":1920,"h":1080,"ip":0,"op":91,"st":0,"bm":0}],"markers":[]}